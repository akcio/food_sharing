{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","App","props","e","setState","activePanel","currentTarget","dataset","to","state","authToken","items","getItems","bind","connect","subscribe","detail","type","data","access_token","console","log","send","api","this","fetchJsonp","then","res","json","response","catch","React","Component","ReactDOM","render","document","getElementById"],"mappings":"urBA8CeA,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,gBACCE,GACD,kBAAC,IAAD,CAAOC,MAAM,qCACZ,kBAAC,IAAD,CACCC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKL,MAAQD,EAAYM,KAAKL,MAAQ,IAFpF,UAIKD,EAAYO,WAJjB,YAI+BP,EAAYQ,aAI5C,kBAAC,IAAD,CAAOP,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASZ,EAAIa,UAAQ,UAAjD,kCCoCWC,E,YArDd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KA8BPf,GAAK,SAACgB,GACL,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,cAAcC,QAAQC,MA7BrD,EAAKC,MAAQ,CACZJ,YAAa,OACbjB,YAAa,KACbsB,UAAY,KACZC,MAAQ,IAGT,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAVE,E,iFAaE,IAAD,OACnBC,IAAQC,WAAU,SAACZ,GAClB,OAAQA,EAAEa,OAAOC,MAChB,IAAK,4BACJ,EAAKb,SAAS,CAAEhB,YAAae,EAAEa,OAAOE,OACtC,MACD,IAAK,8BACJ,EAAKd,SAAS,CAAEM,UAAYP,EAAEa,OAAOE,KAAKC,eAC1C,EAAKP,WACL,MACD,QACCQ,QAAQC,IAAIlB,EAAEa,OAAOC,UAGxBH,IAAQQ,KAAK,sBAAuB,IACpCR,IAAQQ,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,8B,iCAOvD,IAAD,OAENC,EAAG,mEAA+DC,KAAKf,MAAMC,UAA1E,sBADS,WAEhBe,IAAWF,GACVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAR,GAAI,OAAI,EAAKd,SAAS,CAAEO,MAAQO,EAAKW,SAASlB,WACnDmB,OAAM,SAAA3B,GAAC,MAAI,Q,+BAIZ,OACC,kBAAC,IAAD,CAAME,YAAamB,KAAKf,MAAMJ,aAC7B,kBAAC,EAAD,CAAMnB,GAAG,OAAOyB,MAAOa,KAAKf,MAAME,MAAOvB,YAAaoC,KAAKf,MAAMrB,YAAaD,GAAIqC,KAAKrC,U,GAhDzE4C,IAAMC,WCExBlB,IAAQQ,KAAK,gBAQbW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fbb719a5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport fetchJsonp from 'fetch-jsonp';\nimport Home from './panels/Home';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tauthToken : null,\n\t\t\titems : []\n\t\t};\n\n\t\tthis.getItems = this.getItems.bind(this)\n\t}\n\t\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppAccessTokenReceived':\n\t\t\t\t\tthis.setState({ authToken : e.detail.data.access_token });\n\t\t\t\t\tthis.getItems()\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t\tconnect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7234568, \"scope\": \"market, photos, friends\"});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tgetItems() {\n\t\tconst ownerId = 124527492\n\t\tlet api = `https://api.vk.com/method/market.get?v=5.52&access_token=${this.state.authToken}&owner_id=-${ownerId}`\n\t\tfetchJsonp(api)\n\t\t.then(res => res.json())\n\t\t.then(data => this.setState({ items : data.response.items}))\n\t\t.catch(e => [])\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" items={this.state.items} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}